name: "Tests"

# This is a basic workflow this are the triggered

on: [push, pull_request]

jobs:
  run-tests:
    name: PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-18.04
    env:
      extensions: mbstring, intl, json, phalcon4, mysql, pgsql, xdebug, mongodb,
      key: cache-v0.0.2
      GUILD_MYSQL_HOST: 127.0.0.1
      GUILD_MYSQL_USER: root
      GUILD_MYSQL_PASS: password
      GUILD_MYSQL_NAME: guild
      DATA_API_MEMCACHED_HOST: 127.0.0.1
      DATA_API_MEMCACHED_PORT: 11211
      DATA_API_MEMCACHED_WEIGHT: 100
      PHINX_CONFIG_DIR: storage
    services:
      mysql:
        image: mariadb:10.4
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: guild
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.4']
    steps:
      - uses: actions/checkout@v1

      - name: Setup cache environment
        id: cache-env
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v1
        with:
          path: ${{ steps.cache-env.outputs.dir }}
          key: ${{ steps.cache-env.outputs.key }}
          restore-keys: ${{ steps.cache-env.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          tools: pecl

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-suggest

      - name: Update Composer dependencies
        run: composer update --prefer-dist --no-suggest
      
      - name: Phinx migrate 
        run: vendor/bin/phinx migrate 

      - name: Phinx Migrate Seed
        run: vendor/bin/phinx seed:run

      - name: Run test
        if: success()
        run: vendor/bin/codecept run